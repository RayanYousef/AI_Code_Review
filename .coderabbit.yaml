language: en-US

tone_instructions: Enforce all rules from CodingGuidelines.md strictly. For every violation, cite line numbers, explain the issue, provide corrected code, and reference the guideline section.

knowledge_base:
  opt_out: false
  learnings:
    enabled: true
  code_guidelines:
    enabled: true
    filePatterns:
      - "**/.rules/CodingGuidelines.md"
      - "**/CodingGuidelines.md"

reviews:
  profile: assertive
  high_level_summary: true
  auto_review:
    enabled: true
    drafts: false
  
  path_filters:
    - "!**/settings.json"
    - "!**/*.meta"
    - "!**/Library/**"
    - "!**/Temp/**"
    - "!**/Logs/**"
  
  path_instructions:
    - path: "**/*.cs"
      instructions: |
        Review this C# file STRICTLY against CodingGuidelines.md.
        
        Check EVERY violation:
        1. Type declarations: All 'var' must be replaced with explicit types
        2. Naming conventions: PascalCase for classes/methods/public fields, _camelCase for private fields, camelCase for locals
        3. Single responsibility: Each function must have only ONE responsibility
        4. DRY principle: No code duplication
        5. CQS: Methods must either command (modify state) OR query (return data), not both
        6. Explicit visibility modifiers: Always specify private/public
        7. Boolean naming: Start with Is/Has/Did
        8. Event naming: End with "Callback"
        9. Button methods: Start with "OnButtonClick_"
        10. Unity methods: Awake/Start/Update must NOT be public
        11. LINQ in Update loops: Flag and suggest NonAlloc or for-loops
        12. GetComponent caching: Must cache in Awake/Start, not in Update
        13. Serialization: Use '[SerializeField] private' format
        
        For each violation found, output:
        VIOLATION: [Category]
        LINE(S): [line numbers]
        ISSUE: [explanation]
        SOLUTION: [corrected code]
        GUIDELINE: [CodingGuidelines.md section reference]

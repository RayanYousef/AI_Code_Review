knowledge_base:
  files:
    - path: "CodingGuidelines.md"

review_instructions: |
  Use the repository's CodingGuidelines.md as the primary standard for all reviews.
  Enforce:
  - SOLID, KISS, DRY, CQS principles
  - No 'var'; require explicit types
  - One responsibility per function; split when multiple
  - Unity-specific rules (serialization with [SerializeField], cache components in Awake/Start, avoid LINQ in perf paths, use NonAlloc APIs, avoid GetComponent in Update, no public modifiers on Unity lifecycle methods, naming conventions)
  If a change violates these, cite the relevant section from CodingGuidelines.md and suggest a compliant alternative.

reviews:
  path_filters:
    - "!**/settings.json"
    - "!**/*.meta"
  
  path_instructions:
    - path: "**/*.cs"
      instructions: |
        Apply all C# and Unity rules from CodingGuidelines.md.
        Flag usage of 'var', multi-responsibility methods, and Unity anti-patterns (LINQ in hot paths, GetComponent in Update, uncached components, missing [SerializeField] for private editor fields, public Unity lifecycle methods).